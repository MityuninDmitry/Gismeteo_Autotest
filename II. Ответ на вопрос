II. Опишите каким бы вы сделали с нуля процесс непрерывной интеграции и автотестов в нем.

Суть процесса непрерывной интеграции заключается в том, что проект должен автоматически собираться из основного
репозитория, также должны прогоняться все возможные тесты(юнит и автотесты на регрессию) и сообщать о результатах данных операций.

Административно я бы это организовал следующим образом:

Обычно проект хранится в своём репозитории - самая последняя рабочая версия находится в ветке master.

При разработке нового функционала разными разработчиками, они должны отпачковаться от этой ветки и
уже вести разработку в ней.
В случае обновления ветки мастера, каждый разработчик обязан слить к себе новые изменения.

При этом, если разработчик сделал изменения в своей ветке, то автоматически выполнять сборку его репозитория и
прогон автотестов для скорейшего обнаружения ошибок.
Если есть ошибки, то уведомлять об этом разработчика и заинтересованных тестеров для исправления функционала.

После того, как ветка разработчика готова, необходимо:
1. Задеплоить ветку разработчика на тестовый стенд
2. Прогнать
2.1. юнит тесты(которые пишет разработчик на новую фичу),
2.2. автотесты(которые проверяют регрессию, что старые тесты не поломались)
2.3. ручные тесты на новый функционал.
Если все ок, то сливать изменения из новой ветки в мастер, после чего, по необходимости, осуществлять фичафриз,
ещё раз окончательно деплоить проект на тестовый стенд и провести тесты.

Если и тут все ок, то деплоить свежий мастер в продакшн.

После этого автотестеры пишут тесты на новый функционал и к следующему релизу, они уже будут в части регрессионых тестов.